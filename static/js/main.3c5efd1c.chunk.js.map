{"version":3,"sources":["Utils/ZlibHelper.js","Icons/logox.svg","Components/WysiwygEditor.js","Plugin/GoogleOAuth.js","Contents/ThreadBody.js","Contents/Registration.js","Adapters/ForumAjaxAdapter.js","serviceWorker.js","Stores/NavState.js","Stores/GoogleOAuthState.js","Stores/CreateReplyActionState.js","Stores/ThreadListState.js","Stores/ThreadBodyState.js","Stores/NotificationSnackState.js","Layout/TempDrawer.js","Components/CreateReplyBtnCompo.js","Layout/Nav.js","App.js","Contents/ThreadList.js","Components/NotificationSnack.js","Contents/About.js","Contents/Terms.js","Contents/Profile.js","index.js"],"names":["ZlibHelper","unzippedData","isOutputBase64","arguments","length","undefined","dataBuff","Buffer","from","Promise","resolve","reject","zlib","gzip","err","buffer","toString","zippedData","isOutputUtf8","unzip","module","exports","__webpack_require__","p","removeDefaultContentProps","rawContent","blocks","map","val","type","depth","inlineStyleRanges","entityRanges","Object","keys","data","EditorConvertToHTML","inject","observer","state","title","threadTitleInputErr","editorState","EditorState","createEmpty","onEditorStateChange","_this","setState","handleChange","name","event","I_Git_fyp_react_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","target","value","submitNewThread","_callee","_this$props","createReplyActionState","threadListState","notificationSnackState","contentObj","content2","time","signBase64","I_Git_fyp_react_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","props","trim","triggerOpen","abrupt","JSON","stringify","convertToRaw","getCurrentContent","sent","Date","getTime","GoogleOAuth","signSignature","concat","getUserInfo","userAddr","forumAjaxAdapter","then","setModalEditorClose","callUpdateThreadList","stop","this","submitNewReply","_callee2","_this$props2","threadBodyState","_GoogleOAuth$getUserI","_context2","threadAddr","callUpdateThreadBody","submitToBC","navState","createReplyBtnState","_this$props3","classes","titleField","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_18___default","required","fullWidth","label","className","textField","margin","autoComplete","onChange","error","react__WEBPACK_IMPORTED_MODULE_8__","react_draft_wysiwyg__WEBPACK_IMPORTED_MODULE_11__","wrapperClassName","editorClassName","editorStyle","border","height","_material_ui_core__WEBPACK_IMPORTED_MODULE_15__","variant","onClick","style","backgroundColor","getModalEditorBtnTxt","_material_ui_icons_Send__WEBPACK_IMPORTED_MODULE_17___default","sendIcon","Component","withStyles","theme","marginRight","spacing","unit","marginLeft","gapi","window","nacl","require","configFileName","GoogleAuth","configFileId","userInfo","username","createTime","publicKeyBuff","privateKeyBuff","publicKeyBase64","privateKeyBase64","_isRegistered","isSignedIn","get","isAuthorized","currentUser","hasGrantedScopes","getConfigId","listFunc","client","drive","files","list","spaces","fields","execute","response","id","trySetCredential","getFunt","fileId","alt","result","getConfigById","some","checkConfig","publicKey","secretKey","createConfig","createFunc","create","resource","parents","console","log","uploadConfig","jsonStr","req","request","path","method","params","uploadType","body","keyPair","t0","__webpack_exports__","init","setSignedInState","load","discoveryDocs","clientId","scope","auth2","getAuthInstance","listen","handleAuthClick","signOut","signIn","userPrepare","createKeyPair","sign","register","message","optionPrivateKeyBuff","msgBuff","signedBuff","detached","isRegistered","clearState","styles","gridContainer","flexGrow","marginTop","gridItem","width","marginBottom","card","padding","cardContent","refreshBtnDiv","fabGreen","color","palette","common","white","green","&:hover","display","circularProgress","RepliesBody","I_Git_fyp_react_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","I_Git_fyp_react_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","I_Git_fyp_react_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","call","replyPosts","totalCount","finished","updateRepliedPosts","getRepliedPostsWithUserInfo","r","promises","posts","forEach","push","postContent","all","unzippeds","index","createWithContent","convertFromRaw","parse","bindUpdateThreadBodyFunc","post","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_15___default","key","postAddr","item","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_14___default","elevation","square","_material_ui_core_Card__WEBPACK_IMPORTED_MODULE_16___default","_material_ui_core_CardHeader__WEBPACK_IMPORTED_MODULE_17___default","avatar","_material_ui_core_Avatar__WEBPACK_IMPORTED_MODULE_20___default","aria-label","_material_ui_icons_Person__WEBPACK_IMPORTED_MODULE_26___default","action","subheader","requestTime","calendar","_material_ui_core_CardContent__WEBPACK_IMPORTED_MODULE_18___default","react_draft_wysiwyg__WEBPACK_IMPORTED_MODULE_12__","toolbarHidden","readOnly","_material_ui_core_Zoom__WEBPACK_IMPORTED_MODULE_22___default","in","unmountOnExit","_material_ui_core_Fab__WEBPACK_IMPORTED_MODULE_23___default","_material_ui_icons_Refresh__WEBPACK_IMPORTED_MODULE_29___default","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_25___default","size","RepliesBodyStyled","ThreadBody","authorAddr","threadContent","threadIndex","threadTitle","authorInfo","up","down","submitVote","vote","updown","_this2$props","googleOAuthState","_this2","match","submitNewVote","I_Git_fyp_react_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","showUnknownError","submitUpVote","submitDownVote","setIndexTitleMode","updateNavTitle","setThreadAddr","getThread","threadData","setReplyBtnState","unzippedContent","getTotalVoted","totalVoted","container","direction","justify","alignItems","_material_ui_core_CardActions__WEBPACK_IMPORTED_MODULE_19___default","actions","disableActionSpacing","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_21___default","_material_ui_icons_ThumbUp__WEBPACK_IMPORTED_MODULE_27___default","_material_ui_icons_ThumbDown__WEBPACK_IMPORTED_MODULE_28___default","Registration","aggered","inputUsername","inputError","disableBtn","disableCheckbox","disableInput","inputUsernameChange","checkboxChange","checked","handleBtnSubmit","history","date","buf","ucRes","preventDefault","submitNewUserContract","hash","setUserInfo","react_router_dom__WEBPACK_IMPORTED_MODULE_11__","to","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_17___default","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_16___default","paper","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_18___default","align","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_20___default","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_19___default","disabled","_material_ui_core_FormControlLabel__WEBPACK_IMPORTED_MODULE_21___default","checkbox","control","_material_ui_core_Checkbox__WEBPACK_IMPORTED_MODULE_22___default","react_router_dom__WEBPACK_IMPORTED_MODULE_12__","_material_ui_core__WEBPACK_IMPORTED_MODULE_13__","submitBtn","_material_ui_icons_Send__WEBPACK_IMPORTED_MODULE_15___default","I_Git_fyp_react_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_7__","mixins","gutters","paddingTop","paddingBottom","flexWrap","axios","moment","ForumAjaxAdapter","host","port","useHttps","I_Git_fyp_react_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","baseURL","queryParams","parseInt","page","perPage","getRepliedPosts","res","allPromises","userInfos","signature","Boolean","location","hostname","NavState","bound","navTitle","bool","indexTitleMode","observable","computed","GoogleOAuthState","_ref$username","_ref","_ref$userAddr","_ref$createTime","_ref$publicKeyBuff","signinStatus","loginBtnStr","CreateReplyActionState","isModalEditorOpen","ThreadListState","func","updateThreadListFunc","ThreadBodyState","updateThreadBodyFunc","NotificationSnackState","msg","open","LoginButton","handleOAuthLoginOut","onClickOAuth","react_default","Button_default","PowerSettingsNew_default","textTransform","viewBox","xmlns","d","fill","React","TemporaryDrawer","isOpened","toggleDrawer","showProfileItem","ListItem_default","button","component","Link","assign","ListItemIcon_default","AccountBox_default","ListItemText_default","primary","IconButton_default","menuButton","Menu_default","Drawer_default","onClose","tabIndex","role","onKeyDown","List_default","Help_default","Info_default","Divider_default","Grid_default","TempDrawer_LoginButton","position","bottom","Typography_default","fullList","CreateReplyModal","Modal_default","aria-labelledby","aria-describedby","getModalEditorTitle","WysiwygEditor","background","boxShadow","shadows","outline","top","left","transform","muiThemeX","createMuiTheme","blue","ButtonAppBar","loginBtnText","callGoogleOAuth","titlePart","grow","xs","goBack","ArrowBack_default","createReplyBtn","Zoom_default","Fab_default","fab","setModalEditorOpen","Add_default","Reply_default","MuiThemeProvider_default","root","AppBar_default","appBar","Toolbar_default","TempDrawer","src","logo","maxWidth","verticalAlign","CreateReplyBtnCompo","withRouter","pink","right","zIndex","App","isRedirectRegistration","isPass","onLoginSuccess","catch","e","onLoggedOut","Redirect","MuiVirtualizedTable","getRowClassName","rowClassName","onRowClick","classNames","tableRow","flexContainer","defineProperty","tableRowHover","cellRenderer","_ref2","cellData","_ref2$columnIndex","columnIndex","columns","rowHeight","dataOrSkeleton","loadSuccess","skeleton","active","paragraph","rows","TableCell_default","tableCell","noClick","numeric","headerRenderer","_ref3","_direction","dataKey","sortBy","sortDirection","headerHeight","sort","SortDirection","ASC","DESC","inner","disableSort","TableSortLabel_default","_this$props4","tableProps","objectWithoutProperties","dist_es","_ref4","table","_ref5","renderer","_ref5$cellContentRend","cellContentRenderer","other","cellRendererProps","headerProps","objectSpread","PureComponent","defaultProps","WrappedVirtualizedTable","fontFamily","typography","boxSizing","cursor","grey","flex","ReactVirtualizedTable","_this3","classCallCheck","possibleConstructorReturn","getPrototypeOf","Array","updateThreadList","timeout","setTimeout","getRecentThreads","bindUpdateThreadListFunc","setCreateBtnState","clearCreateReplyBtnState","_this4","Paper_default","rowCount","rowGetter","_ref6","rowData","NotificationSnack","Snackbar_default","autoHideDuration","snackbar","anchorOrigin","vertical","horizontal","handleClose","ContentProps","index_es","close","Close_default","About","Terms","fontWeight","href","Profile","age","multiline","currency","createDay","format","userId","crypto","createHash","update","digest","Face_default","CardHeader_default","Avatar_default","Person_default","CardContent_default","TextField_default","stores","createBrowserHistory","SS","ReactDOM","render","index_module","Router","basename","process","react","src_App_0","Nav","Components_NotificationSnack","Switch","Route","exact","ThreadList","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c5efd1c.chunk.js","sourcesContent":["import zlib from 'zlib';\r\n\r\nclass ZlibHelper {\r\n    static gzip(unzippedData, isOutputBase64 = true) {\r\n        let dataBuff = null;\r\n        if (typeof unzippedData === 'string') dataBuff = Buffer.from(unzippedData, 'utf8');\r\n        else dataBuff = unzippedData;\r\n        return new Promise((resolve, reject) => {\r\n            zlib.gzip(dataBuff, (err, buffer) => {\r\n                if (err) return reject(err);\r\n                resolve(isOutputBase64 ? buffer.toString('base64') : buffer);\r\n            });\r\n        });\r\n    }\r\n\r\n    static unzip(zippedData, isOutputUtf8 = true) {\r\n        let dataBuff = null;\r\n        if (typeof zippedData === 'string') dataBuff = Buffer.from(zippedData, 'base64');\r\n        else dataBuff = zippedData;\r\n        return new Promise((resolve, reject) => {\r\n            zlib.unzip(dataBuff, (err, buffer) => {\r\n                if (err) return reject(err);\r\n                resolve(isOutputUtf8 ? buffer.toString('utf8') : buffer);\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport default ZlibHelper;","module.exports = __webpack_public_path__ + \"static/media/logox.65db1446.svg\";","import React, {Component, Fragment} from 'react';\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {EditorState, convertToRaw} from 'draft-js';\r\nimport {Editor} from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport '../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nimport {Button, withStyles} from \"@material-ui/core\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport GoogleOAuth from '../Plugin/GoogleOAuth.js';\r\nimport forumAjaxAdapter from '../Adapters/ForumAjaxAdapter';\r\nimport ZlibHelper from '../Utils/ZlibHelper';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n    sendIcon: {\r\n        marginLeft: theme.spacing.unit\r\n    }\r\n});\r\n\r\nfunction removeDefaultContentProps(rawContent) {\r\n    rawContent.blocks.map((val) => {\r\n        if (val.type === 'unstyled') delete val.type;\r\n        if (val.depth === 0) delete val.depth;\r\n        if (val.inlineStyleRanges.length === 0) delete val.inlineStyleRanges;\r\n        if (val.entityRanges.length === 0) delete val.entityRanges;\r\n        if (Object.keys(val.data).length === 0) delete val.data;\r\n        return val;\r\n    });\r\n    return rawContent;\r\n}\r\n\r\n@inject('navState', 'createReplyActionState', 'threadListState', 'threadBodyState', 'notificationSnackState')\r\n@observer\r\nclass EditorConvertToHTML extends Component {\r\n    state = {\r\n        title: '',\r\n        threadTitleInputErr: false,\r\n        editorState: EditorState.createEmpty(),\r\n    };\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState,\r\n        });\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({[name]: event.target.value});\r\n    };\r\n\r\n    submitNewThread = async () => {\r\n        const {createReplyActionState, threadListState, notificationSnackState} = this.props;\r\n        const title = this.state.title.trim();\r\n        if (!title) {\r\n            this.setState({threadTitleInputErr: true});\r\n            notificationSnackState.triggerOpen('Title cannot contain space only!');\r\n            return;\r\n        }\r\n        const content = JSON.stringify(convertToRaw(this.state.editorState.getCurrentContent()));\r\n        const contentObj = convertToRaw(this.state.editorState.getCurrentContent());\r\n        removeDefaultContentProps(contentObj);\r\n        const content2 = await ZlibHelper.gzip(JSON.stringify(contentObj));\r\n        // console.log(JSON.stringify(contentObj));\r\n        // console.log(draftToHtml(convertToRaw(this.state.editorState.getCurrentContent())))\r\n        const time = new Date().getTime().toString();\r\n        const signBase64 = GoogleOAuth.signSignature(Buffer.concat([\r\n            Buffer.from(GoogleOAuth.getUserInfo().userAddr, 'utf8'),\r\n            Buffer.from(title, 'utf8'),\r\n            Buffer.from(content2, 'utf8'),\r\n            Buffer.from(time, 'utf8'),\r\n        ]));\r\n        forumAjaxAdapter.submitNewThread(GoogleOAuth.getUserInfo().userAddr, title, content2, time, signBase64)\r\n            .then(() => {\r\n                createReplyActionState.setModalEditorClose();\r\n                threadListState.callUpdateThreadList();\r\n                notificationSnackState.triggerOpen('Create new thread successfully!');\r\n            });\r\n    };\r\n\r\n    submitNewReply = async () => {\r\n        const {createReplyActionState, threadBodyState, notificationSnackState} = this.props;\r\n        const {userAddr} = GoogleOAuth.getUserInfo();\r\n        const contentObj = convertToRaw(this.state.editorState.getCurrentContent());\r\n        removeDefaultContentProps(contentObj);\r\n        const content2 = await ZlibHelper.gzip(JSON.stringify(contentObj));\r\n        const time = new Date().getTime().toString();\r\n        const signBase64 = GoogleOAuth.signSignature(Buffer.concat([\r\n            Buffer.from(userAddr, 'utf8'),\r\n            Buffer.from(threadBodyState.threadAddr, 'utf8'),\r\n            Buffer.from(content2, 'utf8'),\r\n            Buffer.from(time, 'utf8'),\r\n        ]));\r\n        forumAjaxAdapter.submitNewReply(userAddr, threadBodyState.threadAddr, content2, time, signBase64)\r\n            .then(() => {\r\n                createReplyActionState.setModalEditorClose();\r\n                threadBodyState.callUpdateThreadBody();\r\n                notificationSnackState.triggerOpen('Reply successfully!');\r\n            });\r\n    };\r\n\r\n    submitToBC = () => {\r\n        const {navState} = this.props;\r\n        if (navState.createReplyBtnState === 'add') this.submitNewThread();\r\n        else if (navState.createReplyBtnState === 'reply') this.submitNewReply();\r\n    };\r\n\r\n    render() {\r\n        const {classes, navState, createReplyActionState} = this.props;\r\n        const {editorState} = this.state;\r\n        const titleField = navState.createReplyBtnState === 'add' ? (\r\n            <TextField\r\n                required\r\n                fullWidth\r\n                label=\"Title\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                autoComplete=\"off\"\r\n                onChange={this.handleChange('title')}\r\n                error={this.state.threadTitleInputErr}\r\n            />\r\n        ) : '';\r\n        return (\r\n            <Fragment>\r\n                {titleField}\r\n                <Editor\r\n                    editorState={editorState}\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    editorStyle={{border: '2px solid #F1F1F1', height: '30vh'}}\r\n                />\r\n                {/*<textarea*/}\r\n                {/*disabled*/}\r\n                {/*value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}*/}\r\n                {/*/>*/}\r\n                {/*<Editor toolbarHidden editorState={editorState}  readOnly={true}/>*/}\r\n                {/*{JSON.stringify(editorState.getCurrentContent())}*/}\r\n                <Button variant=\"contained\" onClick={this.submitToBC} style={{backgroundColor: \"#ffc400\"}}>\r\n                    {navState.getModalEditorBtnTxt}\r\n                    <SendIcon className={classes.sendIcon}/>\r\n                </Button>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(EditorConvertToHTML);","const gapi = window.gapi;\r\n\r\nconst nacl = require('tweetnacl');\r\n\r\nconst configFileName = 'config.json';\r\nlet GoogleAuth = null;\r\nlet configFileId = '';\r\nlet userInfo = {\r\n    username: '',\r\n    userAddr: '',\r\n    createTime: '',\r\n    publicKeyBuff: null\r\n};\r\nlet publicKeyBuff = null, privateKeyBuff = null;\r\nlet publicKeyBase64 = '', privateKeyBase64 = '';\r\nlet _isRegistered = false;\r\n\r\nfunction init(setSignedInState) {\r\n    gapi.load('client:auth2', () => {\r\n        gapi.client.init({\r\n            'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'],\r\n            'clientId': '559605306816-6kkqs7b13i832b96t3qsj50h97jlh1sc.apps.googleusercontent.com',\r\n            'scope': 'https://www.googleapis.com/auth/drive.appdata'\r\n        }).then(() => {\r\n            GoogleAuth = gapi.auth2.getAuthInstance();\r\n\r\n            // Listen for sign-in state changes.\r\n            GoogleAuth.isSignedIn.listen((isSignedIn) => {\r\n                setSignedInState(isSignedIn && isAuthorized());\r\n            });\r\n\r\n            setSignedInState(isSignedIn() && isAuthorized());\r\n        });\r\n    });\r\n}\r\n\r\nfunction isSignedIn() {\r\n    if (!GoogleAuth) {\r\n        return false;\r\n    }\r\n    return GoogleAuth.isSignedIn.get();\r\n}\r\n\r\nfunction isAuthorized() {\r\n    const user = GoogleAuth.currentUser.get();\r\n    return user.hasGrantedScopes('https://www.googleapis.com/auth/drive.appdata');\r\n}\r\n\r\nfunction handleAuthClick() {\r\n    if (GoogleAuth.isSignedIn.get()) {\r\n        // User is authorized and has clicked 'Sign out' button.\r\n        GoogleAuth.signOut();\r\n    } else {\r\n        // User is not signed in. Start Google auth flow.\r\n        GoogleAuth.signIn();\r\n    }\r\n}\r\n\r\n////--------------------------------nacl\r\nfunction createKeyPair() {\r\n    return nacl.sign.keyPair();\r\n}\r\n\r\nfunction signSignature(message, optionPrivateKeyBuff) {\r\n    let msgBuff = message;\r\n    if (typeof msgBuff === 'string') {\r\n        msgBuff = Buffer.from(message, 'utf8');\r\n    }\r\n    const signedBuff = nacl.sign.detached(msgBuff, optionPrivateKeyBuff || privateKeyBuff);\r\n    return Buffer.from(signedBuff).toString('base64');\r\n}\r\n////--------------------------------nacl\r\n\r\nfunction checkConfig(data) {\r\n    const configProperties = ['publicKey', 'secretKey', 'createTime'];\r\n    // const configProperties = ['username', 'publicKey', 'secretKey', 'createTime', 'userAddr'];\r\n    return configProperties.some((val) => {\r\n        if (!data[val]) {\r\n            return true;\r\n        }\r\n    });\r\n}\r\n\r\n\r\nfunction getConfigId() {\r\n    const listFunc = gapi.client.drive.files.list({\r\n        'spaces': 'appDataFolder',\r\n        'fields': 'files(id, name)'\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        listFunc.execute((response) => {\r\n            if (response.files.length > 0) return resolve(response.files[0].id);\r\n            resolve();\r\n        });\r\n    });\r\n}\r\n\r\nfunction getConfigById(id) {\r\n    const getFunt = gapi.client.drive.files.get({\r\n        'fileId': id,\r\n        'alt': 'media'\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        getFunt.execute(function (response) {\r\n            // console.log(response);\r\n            resolve(response.result);\r\n        });\r\n    });\r\n}\r\n\r\nfunction trySetCredential() {\r\n    return getConfigById(configFileId).then((data) => {\r\n        // console.log(data);\r\n        if (checkConfig(data)) {\r\n            _isRegistered = false;\r\n            return false;\r\n        }\r\n        publicKeyBase64 = data.publicKey;\r\n        privateKeyBase64 = data.secretKey;\r\n        publicKeyBuff = Buffer.from(publicKeyBase64, 'base64');\r\n        privateKeyBuff = Buffer.from(privateKeyBase64, 'base64');\r\n        userInfo.username = data.username;\r\n        userInfo.userAddr = data.userAddr;\r\n        userInfo.createTime = data.createTime;\r\n        userInfo.publicKeyBuff = publicKeyBuff;\r\n        _isRegistered = true;\r\n        return true;\r\n    });\r\n}\r\n\r\nfunction createConfig() {\r\n    const createFunc = gapi.client.drive.files.create({\r\n        'resource': {'name': configFileName, 'parents': ['appDataFolder']},\r\n        'fields': 'id'\r\n    });\r\n    console.log('create config...');\r\n    return new Promise((resolve, reject) => {\r\n        createFunc.execute((response) => {\r\n            // console.log(response);\r\n            resolve(response.id);\r\n        });\r\n    });\r\n}\r\n\r\nfunction uploadConfig(id, jsonStr) {\r\n    const req = gapi.client.request({\r\n        'path': '/upload/drive/v3/files/' + id,\r\n        'method': 'PATCH',\r\n        'params': {'uploadType': 'media'},\r\n        'body': jsonStr\r\n    });\r\n    console.log('upload config...');\r\n    return new Promise((resolve, reject) => {\r\n        req.execute((response) => {\r\n            // console.log(response);\r\n            resolve(response);\r\n        });\r\n    });\r\n}\r\n\r\nasync function register(username, keyPair, createTime, userAddr) {\r\n    const id = configFileId || await createConfig();\r\n    // const keyPair = createKeyPair();\r\n    publicKeyBuff = Buffer.from(keyPair.publicKey);\r\n    privateKeyBuff = Buffer.from(keyPair.secretKey);\r\n    publicKeyBase64 = publicKeyBuff.toString('base64');\r\n    privateKeyBase64 = privateKeyBuff.toString('base64');\r\n    userInfo.username = username;\r\n    userInfo.userAddr = userAddr;\r\n    userInfo.createTime = createTime;\r\n    userInfo.publicKeyBuff = publicKeyBuff;\r\n    await uploadConfig(id, {\r\n        'username': username,\r\n        'publicKey': publicKeyBase64,\r\n        'secretKey': privateKeyBase64,\r\n        'createTime': createTime,\r\n        'userAddr': userAddr\r\n    });\r\n    configFileId = id;\r\n}\r\n\r\nasync function userPrepare() {\r\n    const id = await getConfigId();\r\n    // console.log(id);\r\n    if (!id) {\r\n        _isRegistered = false;\r\n        return false;\r\n    }\r\n    configFileId = id;\r\n    return trySetCredential();\r\n}\r\n\r\nfunction isRegistered() {\r\n    return _isRegistered;\r\n}\r\n\r\nfunction getUserInfo() {\r\n    return userInfo;\r\n}\r\n\r\nfunction clearState() {\r\n    configFileId = '';\r\n    userInfo = {\r\n        username: '',\r\n        userAddr: '',\r\n        createTime: '',\r\n        publicKeyBuff: null\r\n    };\r\n    publicKeyBuff = null;\r\n    privateKeyBuff = null;\r\n    publicKeyBase64 = '';\r\n    privateKeyBase64 = '';\r\n    _isRegistered = false;\r\n}\r\n\r\nexport default {\r\n    init,\r\n    isSignedIn,\r\n    isAuthorized,\r\n    handleAuthClick,\r\n    GoogleAuth,\r\n    userPrepare,\r\n    createKeyPair,\r\n    trySetCredential,\r\n    register,\r\n    signSignature,\r\n    isRegistered,\r\n    getUserInfo,\r\n    clearState\r\n};","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {EditorState, convertToRaw, convertFromRaw} from 'draft-js';\r\nimport {Editor} from 'react-draft-wysiwyg';\r\n\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport green from '@material-ui/core/colors/green';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nimport forumAjaxAdapter from '../Adapters/ForumAjaxAdapter';\r\nimport ZlibHelper from '../Utils/ZlibHelper';\r\nimport GoogleOAuth from \"../Plugin/GoogleOAuth\";\r\n\r\nconst styles = theme => ({\r\n    gridContainer: {\r\n        flexGrow: 1,\r\n        marginTop: 20,\r\n    },\r\n    gridItem: {\r\n        width: '72%',\r\n        marginBottom: 10\r\n    },\r\n    card: {\r\n        padding: theme.spacing.unit * 2\r\n    },\r\n    cardContent: {},\r\n    refreshBtnDiv: {\r\n        padding: theme.spacing.unit * 3,\r\n    },\r\n    fabGreen: {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: green[500],\r\n        '&:hover': {\r\n            backgroundColor: green[600],\r\n        },\r\n        display: 'flex',\r\n        margin: '0 auto'\r\n    },\r\n    circularProgress: {\r\n        display: 'block',\r\n        margin: '0 auto'\r\n    }\r\n});\r\n\r\n@inject('navState', 'threadBodyState')\r\n@observer\r\nclass RepliesBody extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        props.threadBodyState.bindUpdateThreadBodyFunc(this.updateRepliedPosts);\r\n    }\r\n\r\n    state = {\r\n        replyPosts: [],\r\n        totalCount: 0,\r\n        finished: false\r\n    };\r\n\r\n    updateRepliedPosts = () => {\r\n        const {threadAddr} = this.props;\r\n        this.setState({finished: false});\r\n        forumAjaxAdapter.getRepliedPostsWithUserInfo(threadAddr).then(r => {\r\n            const promises = [];\r\n            r.posts.forEach(val => promises.push(ZlibHelper.unzip(val.postContent)));\r\n            Promise.all(promises).then((unzippeds) => {\r\n                r.posts.map((val, index) => {\r\n                    val.postContent = EditorState.createWithContent(convertFromRaw(JSON.parse(unzippeds[index])));\r\n                    return val;\r\n                });\r\n                this.setState({replyPosts: r.posts, totalCount: r.totalCount, finished: true});\r\n                // console.log(this.state)\r\n            });\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.updateRepliedPosts();\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <Fragment>\r\n                {this.state.replyPosts.map((post, index) => {\r\n                    return (<Grid key={post.postAddr} item className={classes.gridItem}>\r\n                        <Paper elevation={24} square={true}>\r\n                            <Card className={classes.card}>\r\n                                <CardHeader\r\n                                    avatar={\r\n                                        <Avatar aria-label=\"Recipe\">\r\n                                            <PersonIcon/>\r\n                                        </Avatar>\r\n                                    }\r\n                                    action={'#' + (2 + index)}\r\n                                    title={post.userInfo.username}\r\n                                    subheader={post.requestTime.calendar()}\r\n                                />\r\n                                <CardContent className={classes.cardContent}>\r\n                                    <Editor toolbarHidden editorState={post.postContent} readOnly={true}/>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Paper>\r\n                    </Grid>);\r\n                })}\r\n                <Grid item className={classes.gridItem}>\r\n                    <div className={classes.refreshBtnDiv}>\r\n                        {this.state.finished ? (\r\n                            <Zoom\r\n                                key='inherit'\r\n                                in\r\n                                unmountOnExit\r\n                            >\r\n                                <Fab onClick={this.updateRepliedPosts} className={classes.fabGreen} color='inherit'>\r\n                                    <RefreshIcon/>\r\n                                </Fab>\r\n                            </Zoom>\r\n                        ) : (<CircularProgress size={56} className={classes.circularProgress}/>)}\r\n                    </div>\r\n                </Grid>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst RepliesBodyStyled = withStyles(styles)(RepliesBody);\r\n\r\n@inject('navState', 'threadBodyState', 'googleOAuthState', 'notificationSnackState')\r\n@observer\r\nclass ThreadBody extends Component {\r\n    state = {\r\n        authorAddr: \"\",\r\n        threadAddr: \"\",\r\n        threadContent: EditorState.createEmpty(),\r\n        threadIndex: \"\",\r\n        threadTitle: \"\",\r\n        requestTime: \"\",\r\n        authorInfo: {},\r\n        up: 0,\r\n        down: 0\r\n    };\r\n\r\n    componentWillMount() {\r\n        const {navState, threadBodyState} = this.props;\r\n        navState.setIndexTitleMode(false);\r\n        navState.updateNavTitle();\r\n        threadBodyState.setThreadAddr(this.props.match.params.threadAddr);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const {navState, notificationSnackState} = this.props;\r\n        const {threadAddr} = this.props.match.params;\r\n        try {\r\n            const threadData = await forumAjaxAdapter.getThread(threadAddr);\r\n            // console.log(threadData);\r\n            navState.setReplyBtnState();\r\n            navState.updateNavTitle(threadData.threadTitle);\r\n            const unzippedContent = await ZlibHelper.unzip(threadData.threadContent);\r\n            threadData.threadContent = EditorState.createWithContent(convertFromRaw(JSON.parse(unzippedContent)));\r\n            this.setState(threadData);\r\n            const authorInfo = await forumAjaxAdapter.getUserInfo(threadData.authorAddr);\r\n            this.setState({authorInfo: authorInfo});\r\n            const totalVoted = await forumAjaxAdapter.getTotalVoted(threadAddr);\r\n            this.setState({up: totalVoted.up, down: totalVoted.down});\r\n        } catch (e) {\r\n            notificationSnackState.showUnknownError();\r\n        }\r\n    }\r\n\r\n    submitVote = async (vote, updown) => {\r\n        const {googleOAuthState, notificationSnackState} = this.props;\r\n        if (!googleOAuthState.isRegistered) return notificationSnackState.triggerOpen('Please login first!');\r\n        try {\r\n            const {userAddr} = GoogleOAuth.getUserInfo();\r\n            const {threadAddr} = this.props.match.params;\r\n            const time = new Date().getTime().toString();\r\n            const signBase64 = GoogleOAuth.signSignature(Buffer.concat([\r\n                Buffer.from(userAddr, 'utf8'),\r\n                Buffer.from(threadAddr, 'utf8'),\r\n                Buffer.from(vote, 'utf8'),\r\n                Buffer.from(time, 'utf8'),\r\n            ]));\r\n            await forumAjaxAdapter.submitNewVote(userAddr, threadAddr, vote, time, signBase64)\r\n                .then(() => {\r\n                    this.setState({[updown]: this.state[updown] + 1});\r\n                    notificationSnackState.triggerOpen('Vote the thread successfully!');\r\n                });\r\n        } catch (e) {\r\n            notificationSnackState.showUnknownError();\r\n        }\r\n    };\r\n\r\n    submitUpVote = () => {\r\n        this.submitVote('1', 'up');\r\n    };\r\n\r\n    submitDownVote = () => {\r\n        this.submitVote('-1', 'down');\r\n    };\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\"\r\n                  className={classes.gridContainer}>\r\n                <Grid item className={classes.gridItem}>\r\n                    <Card className={classes.card} elevation={16}>\r\n                        <CardHeader\r\n                            avatar={\r\n                                <Avatar aria-label=\"Recipe\">\r\n                                    <PersonIcon/>\r\n                                </Avatar>\r\n                            }\r\n                            action=\"#1\"\r\n                            title={this.state.authorInfo.username}\r\n                            subheader={this.state.requestTime ? this.state.requestTime.calendar() : this.state.requestTime}\r\n                        />\r\n                        <CardContent className={classes.cardContent}>\r\n                            <Editor toolbarHidden editorState={this.state.threadContent} readOnly={true}/>\r\n                        </CardContent>\r\n                        <CardActions className={classes.actions} disableActionSpacing>\r\n                            <IconButton onClick={this.submitUpVote} aria-label=\"Vote Up\">\r\n                                <ThumbUpIcon/>\r\n                            </IconButton>\r\n                            {this.state.up}\r\n                            <IconButton onClick={this.submitDownVote} aria-label=\"Vote Down\">\r\n                                <ThumbDownIcon/>\r\n                            </IconButton>\r\n                            {this.state.down}\r\n                        </CardActions>\r\n                    </Card>\r\n                </Grid>\r\n                <RepliesBodyStyled threadAddr={this.props.match.params.threadAddr}/>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ThreadBody);\r\n\r\n","import React, {Component, Fragment} from 'react';\r\nimport {inject, observer} from 'mobx-react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {Link, Redirect, withRouter} from 'react-router-dom';\r\n\r\nimport {Button, withStyles} from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport GoogleOAuth from '../Plugin/GoogleOAuth';\r\nimport forumAjaxAdapter from '../Adapters/ForumAjaxAdapter';\r\n\r\nconst styles = theme => ({\r\n    gridContainer: {\r\n        flexGrow: 1,\r\n        marginTop: 20,\r\n    },\r\n    gridItem: {\r\n        height: '40%',\r\n        width: '40%',\r\n        marginBottom: 10\r\n    },\r\n    paper: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing.unit * 2,\r\n        paddingBottom: theme.spacing.unit * 2,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n    checkbox: {\r\n        width: '100%',\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n    submitBtn: {\r\n        margin: '0 auto'\r\n    },\r\n    sendIcon: {\r\n        marginLeft: theme.spacing.unit\r\n    }\r\n});\r\n\r\n@inject('navState', 'googleOAuthState', 'notificationSnackState')\r\nclass Registration extends Component {\r\n    state = {\r\n        aggered: false,\r\n        inputUsername: '',\r\n        inputError: false,\r\n        disableBtn: false,\r\n        disableCheckbox: false,\r\n        disableInput: false\r\n    };\r\n\r\n    componentWillMount() {\r\n        const {navState} = this.props;\r\n        navState.updateNavTitle();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {googleOAuthState, notificationSnackState} = this.props;\r\n        if (googleOAuthState.isSignedIn && !googleOAuthState.isRegistered) {\r\n            notificationSnackState.triggerOpen('Please complete the registration. Thanks.');\r\n        }\r\n    }\r\n\r\n    inputUsernameChange = event => {\r\n        this.setState({inputUsername: event.target.value, inputError: false});\r\n    };\r\n\r\n    checkboxChange = event => {\r\n        this.setState({aggered: event.target.checked});\r\n    };\r\n\r\n    handleBtnSubmit = async event => {\r\n        const {history, googleOAuthState, notificationSnackState} = this.props;\r\n        if (this.state.inputUsername) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        const username = this.state.inputUsername.trim();\r\n        if (!username) {\r\n            this.setState({inputError: true});\r\n            notificationSnackState.triggerOpen('Username cannot contain space only!');\r\n            return;\r\n        }\r\n        this.setState({disableBtn: true, disableCheckbox: true, disableInput: true});\r\n\r\n        const keyPair = GoogleOAuth.createKeyPair();\r\n        const publicKeyBase64 = Buffer.from(keyPair.publicKey).toString('base64');\r\n        const date = new Date().getTime().toString();\r\n        const buf = Buffer.concat([\r\n            Buffer.from(username, 'utf8'),\r\n            Buffer.from(keyPair.publicKey),\r\n            Buffer.from(date, 'utf8')\r\n        ]);\r\n        const signBase64 = GoogleOAuth.signSignature(buf, keyPair.secretKey);\r\n\r\n        // const checkOAuth = await GoogleOAuth.userPrepare();\r\n        // if (!checkOAuth) {\r\n            const ucRes = await forumAjaxAdapter.submitNewUserContract(username, publicKeyBase64, date, signBase64);\r\n            console.log(ucRes);\r\n            await GoogleOAuth.register(username, keyPair, date, ucRes.data.hash);\r\n            googleOAuthState.isRegistered = true;\r\n            googleOAuthState.setUserInfo(GoogleOAuth.getUserInfo());\r\n            notificationSnackState.triggerOpen('Registration succeeded!');\r\n        // }\r\n        history.push('/');\r\n    };\r\n\r\n    render() {\r\n        const {classes, googleOAuthState} = this.props;\r\n        if (!googleOAuthState.isSignedIn || googleOAuthState.isRegistered) {\r\n            return <Redirect to=\"/\"/>;\r\n        }\r\n        return (\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\"\r\n                  className={classes.gridContainer}>\r\n                <Grid item className={classes.gridItem}>\r\n                    <Paper elevation={24} square={true} className={classes.paper}>\r\n                        <Typography variant=\"h5\" align=\"center\">\r\n                            Registration\r\n                        </Typography>\r\n                        <Divider style={{marginTop: '2%'}}/>\r\n                        <form action=\"#\" className={classes.container} autoComplete=\"off\">\r\n                            <TextField\r\n                                label=\"Enter your username\"\r\n                                error={this.state.inputError}\r\n                                className={classes.textField}\r\n                                disabled={this.state.disableInput}\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                type=\"text\"\r\n                                fullWidth\r\n                                required\r\n                                onChange={this.inputUsernameChange}\r\n                            />\r\n\r\n                            <FormControlLabel className={classes.checkbox}\r\n                                              control={\r\n                                                  <Checkbox\r\n                                                      // checked={this.state.checkedA}\r\n                                                      onChange={this.checkboxChange}\r\n                                                      disabled={this.state.disableCheckbox}\r\n                                                  />\r\n                                              }\r\n                                              label={<div>I accept and agree to the <Link to={'/terms'}>Term of Service</Link>.</div>}\r\n                            />\r\n\r\n                            <Button disabled={!this.state.aggered || this.state.disableBtn} type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    className={classes.submitBtn}\r\n                                    onClick={this.handleBtnSubmit}\r\n                                    color=\"primary\">\r\n                                Continue\r\n                                <SendIcon className={classes.sendIcon}/>\r\n                            </Button>\r\n                        </form>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Registration);\r\n","const axios = require('axios');\r\nconst moment = require('moment');\r\n\r\nclass ForumAjaxAdapter {\r\n    constructor(host = 'localhost', port = '', useHttps = false) {\r\n        this.baseURL = `${useHttps ? 'https' : 'http'}://${host}${port ? ':' + port : port}/`;\r\n        if(useHttps) this.baseURL = `https://${host}/`;\r\n    }\r\n\r\n    async getRecentThreads() {\r\n        return (await axios.get(this.baseURL + 'api/recent-threads')).data;\r\n    }\r\n\r\n    async getThread(threadAddr) {\r\n        const queryParams = {threadAddr: threadAddr};\r\n        const data = (await axios.get(this.baseURL + 'api/thread', {params: queryParams})).data;\r\n        data.requestTime = moment(parseInt(data.requestTime));\r\n        return data;\r\n    }\r\n\r\n    async getUserInfo(userAddr) {\r\n        const queryParams = {userAddr: userAddr};\r\n        return (await axios.get(this.baseURL + 'api/user-info', {params: queryParams})).data;\r\n    }\r\n\r\n    async getRepliedPosts(threadAddr, page = 1, perPage = 100) {\r\n        const queryParams = {threadAddr: threadAddr, page: page, perPage: perPage};\r\n        const data = (await axios.get(this.baseURL + 'api/replied-posts', {params: queryParams})).data;\r\n        data.posts.map((val) => {\r\n            val.requestTime = moment(parseInt(val.requestTime));\r\n            return val;\r\n        });\r\n        return data;\r\n    }\r\n\r\n    async getRepliedPostsWithUserInfo(threadAddr, page = 1, perPage = 100) {\r\n        const res = (await this.getRepliedPosts(threadAddr, page, perPage));\r\n        if (!res) {\r\n            return {};\r\n        }\r\n        const allPromises = [];\r\n        res.posts.forEach((post) => {\r\n            allPromises.push(this.getUserInfo(post.userAddr));\r\n        });\r\n        const userInfos = await Promise.all(allPromises);\r\n        res.posts.map((val, index) => {\r\n            val.userInfo = userInfos[index];\r\n            delete val.userInfo.publicKeyBase64;\r\n            return val;\r\n        });\r\n        return res;\r\n    }\r\n\r\n    async getTotalVoted(threadAddr) {\r\n        const queryParams = {threadAddr: threadAddr};\r\n        return (await axios.get(this.baseURL + 'api/total-voted', {params: queryParams})).data;\r\n    }\r\n\r\n    submitNewUserContract(username, publicKey, requestTime, signature) {\r\n        return axios.post(this.baseURL + 'api/new-user-contract', {username, publicKey, requestTime, signature});\r\n    }\r\n\r\n    submitNewThread(authorAddr, threadTitle, threadContent, requestTime, signature) {\r\n        return axios.post(this.baseURL + 'api/new-thread', {\r\n            authorAddr,\r\n            threadTitle,\r\n            threadContent,\r\n            requestTime,\r\n            signature\r\n        });\r\n    }\r\n\r\n    submitNewReply(userAddr, threadAddr, postContent, requestTime, signature) {\r\n        return axios.post(this.baseURL + 'api/new-reply-post', {\r\n            userAddr,\r\n            threadAddr,\r\n            postContent,\r\n            requestTime,\r\n            signature\r\n        });\r\n    }\r\n\r\n    submitNewVote(userAddr, threadAddr, vote, requestTime, signature) {\r\n        return axios.post(this.baseURL + 'api/new-vote', {\r\n            userAddr,\r\n            threadAddr,\r\n            vote,\r\n            requestTime,\r\n            signature\r\n        });\r\n    }\r\n}\r\n\r\nexport default new ForumAjaxAdapter('vv.nathanlam11.tk/fyp', '', true);\r\n// export default new ForumAjaxAdapter('localhost', '8099');","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import {observable, action, computed} from 'mobx';\r\n\r\nclass NavState {\r\n    @observable navTitle = '';\r\n    @observable indexTitleMode = true;\r\n    @observable createReplyBtnState = '';\r\n\r\n    @action.bound updateNavTitle(title = '') {\r\n        this.navTitle = title;\r\n    }\r\n\r\n    @action.bound setIndexTitleMode(bool) {\r\n        this.indexTitleMode = bool;\r\n    }\r\n\r\n    @action.bound setCreateBtnState() {\r\n        this.createReplyBtnState = 'add';\r\n    }\r\n\r\n    @action.bound setReplyBtnState() {\r\n        this.createReplyBtnState = 'reply';\r\n    }\r\n\r\n    @action.bound clearCreateReplyBtnState() {\r\n        this.createReplyBtnState = '';\r\n    }\r\n\r\n    @action.bound createReplyBtnClick() {\r\n        console.log('createReplyBtnClick');\r\n    }\r\n\r\n    @computed get getModalEditorTitle() {\r\n        if (this.createReplyBtnState === 'add') return 'New Thread:';\r\n        else if (this.createReplyBtnState === 'reply') return 'New Reply:';\r\n        return '';\r\n    }\r\n\r\n    @computed get getModalEditorBtnTxt() {\r\n        if (this.createReplyBtnState === 'add') return 'Create';\r\n        else if (this.createReplyBtnState === 'reply') return 'Reply';\r\n        return '';\r\n    }\r\n}\r\n\r\nexport default NavState;","import {observable, action, computed} from 'mobx';\r\n\r\nimport GoogleOAuth from '../Plugin/GoogleOAuth';\r\n\r\nclass GoogleOAuthState {\r\n    @observable signinStatus = '';\r\n    @observable loginBtnStr = '';\r\n    @observable isSignedIn = false;\r\n    @observable isRegistered = false;\r\n    @observable userInfo = {username: '', userAddr: '', createTime: '', publicKeyBuff: null};\r\n\r\n    @action.bound setUserInfo({username = '', userAddr = '', createTime = '', publicKeyBuff = null}) {\r\n        this.userInfo.username = username;\r\n        this.userInfo.userAddr = userAddr;\r\n        this.userInfo.createTime = createTime;\r\n        this.userInfo.publicKeyBuff = publicKeyBuff;\r\n    }\r\n\r\n    @action.bound onLoginSuccess() {\r\n        this.signinStatus = 'You are currently signed in and have granted access to this app.';\r\n        this.loginBtnStr = 'Logout';\r\n        this.isSignedIn = true;\r\n    }\r\n\r\n    @action.bound onLoggedOut() {\r\n        this.signinStatus = 'You have not authorized this app or you are signed out.';\r\n        this.loginBtnStr = 'Login';\r\n        this.isSignedIn = false;\r\n    }\r\n\r\n    @action.bound onClickOAuth() {\r\n        GoogleOAuth.handleAuthClick();\r\n    }\r\n\r\n    @action.bound clearState() {\r\n        this.signinStatus = '';\r\n        this.loginBtnStr = 'Login';\r\n        this.isSignedIn = false;\r\n        this.isRegistered = false;\r\n        this.userInfo = {username: '', userAddr: '', createTime: '', publicKeyBuff: null};\r\n    }\r\n}\r\n\r\nexport default GoogleOAuthState;","import {observable, action, computed} from 'mobx';\r\n\r\nclass CreateReplyActionState {\r\n    @observable isModalEditorOpen = false;\r\n\r\n    @action.bound setModalEditorOpen() {\r\n        this.isModalEditorOpen = true;\r\n    }\r\n\r\n    @action.bound setModalEditorClose() {\r\n        this.isModalEditorOpen = false;\r\n    }\r\n}\r\n\r\nexport default CreateReplyActionState;","import {observable, action, computed} from 'mobx';\r\n\r\nclass ThreadListState {\r\n    @action.bound bindUpdateThreadListFunc(func) {\r\n        this.updateThreadListFunc = func;\r\n    }\r\n\r\n    @action.bound callUpdateThreadList() {\r\n        if (this.updateThreadListFunc) this.updateThreadListFunc();\r\n    }\r\n}\r\n\r\nexport default ThreadListState;","import {observable, action, computed} from 'mobx';\r\n\r\nclass ThreadBodyState {\r\n    @observable threadAddr = '';\r\n\r\n    @action.bound setThreadAddr(threadAddr) {\r\n        this.threadAddr = threadAddr;\r\n    }\r\n\r\n    @action.bound bindUpdateThreadBodyFunc(func) {\r\n        this.updateThreadBodyFunc = func;\r\n    }\r\n\r\n    @action.bound callUpdateThreadBody() {\r\n        if (this.updateThreadBodyFunc) this.updateThreadBodyFunc();\r\n    }\r\n}\r\n\r\nexport default ThreadBodyState;","import {observable, action, computed} from 'mobx';\r\n\r\nclass NotificationSnackState {\r\n    @observable open = false;\r\n    @observable message = '';\r\n\r\n    @action.bound triggerOpen(msg = '') {\r\n        this.message = msg;\r\n        this.open = true;\r\n    }\r\n\r\n    @action.bound handleClose() {\r\n        this.open = false;\r\n    };\r\n\r\n    @action.bound showUnknownError() {\r\n        this.triggerOpen('Sorry! An error occurred.');\r\n    }\r\n}\r\n\r\nexport default NotificationSnackState;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {inject, observer} from 'mobx-react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nimport '../Styles/GoogleOAuthStyle.css';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport GoogleOAuth from '../Plugin/GoogleOAuth';\r\n\r\nconst styles = {\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n    },\r\n};\r\n\r\n@inject('googleOAuthState')\r\n@observer\r\nclass LoginButton extends React.Component {\r\n\r\n    handleOAuthLoginOut = () => {\r\n        const {googleOAuthState} = this.props;\r\n        GoogleOAuth.clearState();\r\n        googleOAuthState.clearState();\r\n        googleOAuthState.onClickOAuth();\r\n    };\r\n\r\n    render() {\r\n        const {googleOAuthState} = this.props;\r\n        if (googleOAuthState.loginBtnStr === 'Logout') {\r\n            return <Button variant=\"contained\" color=\"secondary\" onClick={this.handleOAuthLoginOut}>\r\n                <PowerSettingsNewIcon/>\r\n                {googleOAuthState.loginBtnStr}\r\n            </Button>;\r\n        }\r\n        if (googleOAuthState.loginBtnStr === 'Login') {\r\n            return <Button style={{textTransform: \"none\"}} onClick={this.handleOAuthLoginOut} className=\"google-button\">\r\n  <span className=\"google-button__icon\">\r\n    <svg viewBox=\"0 0 366 372\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path\r\n            d=\"M125.9 10.2c40.2-13.9 85.3-13.6 125.3 1.1 22.2 8.2 42.5 21 59.9 37.1-5.8 6.3-12.1 12.2-18.1 18.3l-34.2 34.2c-11.3-10.8-25.1-19-40.1-23.6-17.6-5.3-36.6-6.1-54.6-2.2-21 4.5-40.5 15.5-55.6 30.9-12.2 12.3-21.4 27.5-27 43.9-20.3-15.8-40.6-31.5-61-47.3 21.5-43 60.1-76.9 105.4-92.4z\"\r\n            id=\"Shape\" fill=\"#EA4335\"/>\r\n        <path\r\n            d=\"M20.6 102.4c20.3 15.8 40.6 31.5 61 47.3-8 23.3-8 49.2 0 72.4-20.3 15.8-40.6 31.6-60.9 47.3C1.9 232.7-3.8 189.6 4.4 149.2c3.3-16.2 8.7-32 16.2-46.8z\"\r\n            id=\"Shape\" fill=\"#FBBC05\"/>\r\n        <path\r\n            d=\"M361.7 151.1c5.8 32.7 4.5 66.8-4.7 98.8-8.5 29.3-24.6 56.5-47.1 77.2l-59.1-45.9c19.5-13.1 33.3-34.3 37.2-57.5H186.6c.1-24.2.1-48.4.1-72.6h175z\"\r\n            id=\"Shape\" fill=\"#4285F4\"/>\r\n        <path\r\n            d=\"M81.4 222.2c7.8 22.9 22.8 43.2 42.6 57.1 12.4 8.7 26.6 14.9 41.4 17.9 14.6 3 29.7 2.6 44.4.1 14.6-2.6 28.7-7.9 41-16.2l59.1 45.9c-21.3 19.7-48 33.1-76.2 39.6-31.2 7.1-64.2 7.3-95.2-1-24.6-6.5-47.7-18.2-67.6-34.1-20.9-16.6-38.3-38-50.4-62 20.3-15.7 40.6-31.5 60.9-47.3z\"\r\n            fill=\"#34A853\"/>\r\n        </svg>\r\n  </span>\r\n                <span className=\"google-button__text\">Sign in with Google</span>\r\n            </Button>;\r\n        }\r\n        return '';\r\n    }\r\n}\r\n\r\n@inject('googleOAuthState')\r\n@observer\r\nclass TemporaryDrawer extends React.Component {\r\n    state = {\r\n        isOpened: this.props.isOpened\r\n    };\r\n\r\n    toggleDrawer = (open) => () => {\r\n        this.setState({\r\n            isOpened: open,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {classes, googleOAuthState} = this.props;\r\n        const showProfileItem = googleOAuthState.isRegistered ? (\r\n            <ListItem button key=\"Profile\" component={props => <Link to=\"/profile\" {...props} />}>\r\n                <ListItemIcon><AccountBoxIcon/></ListItemIcon>\r\n                <ListItemText primary=\"Profile\"/>\r\n            </ListItem>\r\n        ) : '';\r\n        return (\r\n            <div>\r\n                <IconButton className={classes.menuButton} onClick={this.toggleDrawer(true)} color=\"inherit\"\r\n                            aria-label=\"Menu\">\r\n                    <MenuIcon/>\r\n                </IconButton>\r\n                <Drawer open={this.state.isOpened} onClose={this.toggleDrawer(false)}>\r\n                    <div\r\n                        tabIndex={0}\r\n                        role=\"button\"\r\n                        onClick={this.toggleDrawer(false)}\r\n                        onKeyDown={this.toggleDrawer(false)}\r\n                    >\r\n                        <div className={classes.list}>\r\n                            <List>\r\n                                {showProfileItem}\r\n                                <ListItem button key=\"About\" component={props => <Link to=\"/about\" {...props} />}>\r\n                                    <ListItemIcon><HelpIcon/></ListItemIcon>\r\n                                    <ListItemText primary=\"About\"/>\r\n                                </ListItem>\r\n                                <ListItem button key=\"Terms of Service\"\r\n                                          component={props => <Link to=\"/terms\" {...props} />}>\r\n                                    <ListItemIcon><InfoIcon/></ListItemIcon>\r\n                                    <ListItemText primary=\"Terms of Service\"/>\r\n                                </ListItem>\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                    <Divider/>\r\n                    <Grid container direction=\"column\" justify=\"space-between\" alignItems=\"center\"\r\n                          style={{padding: 20}}>\r\n                        <Grid item>\r\n                            <LoginButton/>\r\n                        </Grid>\r\n                        <Grid item style={{position: 'absolute', bottom: '3%'}}>\r\n                            <Typography component=\"p\" color=\"textSecondary\" align=\"center\">\r\n                                © 2019 fyp.nathanlam11.tk.\r\n                            </Typography>\r\n                            <Typography component=\"p\" color=\"textSecondary\" align=\"center\">\r\n                                All rights reserved.\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTemporaryDrawer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TemporaryDrawer);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {inject, observer} from 'mobx-react';\r\n\r\n\r\nimport {Button, withStyles} from \"@material-ui/core\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\n\r\nimport WysiwygEditor from \"./WysiwygEditor\";\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: theme.spacing.unit * 100,\r\n        height: theme.spacing.unit * 70,\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing.unit * 4,\r\n        outline: 'none',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n    sendIcon:{\r\n        marginLeft: theme.spacing.unit\r\n    }\r\n});\r\n\r\n\r\n@inject('navState')\r\n@inject('createReplyActionState')\r\n@observer\r\nclass CreateReplyModal extends React.Component {\r\n\r\n    render() {\r\n        const {classes, navState, createReplyActionState} = this.props;\r\n\r\n        return (\r\n            <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={createReplyActionState.isModalEditorOpen}\r\n                onClose={createReplyActionState.setModalEditorClose}\r\n            >\r\n                <div className={classes.paper}>\r\n                    <Typography variant=\"h6\" id=\"modal-title\">\r\n                        {navState.getModalEditorTitle}\r\n                    </Typography>\r\n                    <WysiwygEditor/>\r\n                </div>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CreateReplyModal);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {withRouter, Link} from \"react-router-dom\";\r\n\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport {blue, pink} from '@material-ui/core/colors';\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nimport TempDrawer from './TempDrawer';\r\nimport logo from '../Icons/logox.svg';\r\nimport CreateReplyBtnCompo from '../Components/CreateReplyBtnCompo';\r\n\r\nconst muiThemeX = createMuiTheme({\r\n    palette: {\r\n        primary: blue\r\n    }\r\n});\r\n\r\nconst styles = theme => ({\r\n    appBar: {\r\n        color: pink,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n        display: 'inline-block',\r\n        verticalAlign: 'middle'\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        // marginRight: 20,\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        margin: theme.spacing.unit,\r\n        bottom: theme.spacing.unit * 3,\r\n        right: theme.spacing.unit * 1,\r\n        zIndex: 1000\r\n    }\r\n});\r\n\r\n@inject('googleOAuthState', 'navState', 'createReplyActionState', 'threadListState')\r\n@observer\r\nclass ButtonAppBar extends React.Component {\r\n    state = {\r\n        loginBtnText: 'Login'\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    callGoogleOAuth=() =>{\r\n        console.log('ggsgsgsrssrg');\r\n        this.setState({loginBtnText: 'Logout'});\r\n    };\r\n\r\n    render() {\r\n        const {classes, navState, googleOAuthState, createReplyActionState, threadListState} = this.props;\r\n        let titlePart = (\r\n            <Grid item>\r\n                <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n                    {navState.navTitle}\r\n                </Typography>\r\n            </Grid>\r\n        );\r\n        if (!navState.indexTitleMode) titlePart = (\r\n            <Grid item xs={9}>\r\n                <IconButton color=\"inherit\" style={{marginRight: 10}} onClick={this.props.history.goBack}>\r\n                    <ArrowBackIcon/>\r\n                </IconButton>\r\n                <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n                    {navState.navTitle}\r\n                </Typography>\r\n            </Grid>\r\n        );\r\n        let createReplyBtn = '';\r\n        if (googleOAuthState.isSignedIn && navState.createReplyBtnState === 'add') {\r\n            createReplyBtn = (\r\n                <Zoom\r\n                    key='primary'\r\n                    in={true}\r\n                    unmountOnExit\r\n                >\r\n                    <Fab color=\"primary\" size='medium' aria-label=\"Add\" className={classes.fab}\r\n                         onClick={createReplyActionState.setModalEditorOpen}>\r\n                        <AddIcon/>\r\n                    </Fab>\r\n                </Zoom>\r\n            );\r\n        } else if (googleOAuthState.isSignedIn && navState.createReplyBtnState === 'reply') {\r\n            createReplyBtn = (\r\n                <Zoom\r\n                    key='secondary'\r\n                    in={true}\r\n                    unmountOnExit\r\n                >\r\n                    <Fab color=\"secondary\" size='medium' aria-label=\"Reply\" className={classes.fab}\r\n                         onClick={createReplyActionState.setModalEditorOpen}>\r\n                        <ReplyIcon/>\r\n                    </Fab>\r\n                </Zoom>\r\n            );\r\n        }\r\n        return (\r\n            <MuiThemeProvider theme={muiThemeX}>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\" className={classes.appBar}>\r\n                        <Toolbar>\r\n                            <Grid container spacing={0} justify=\"space-between\" alignItems=\"center\">\r\n                                <Grid item>\r\n                                    <TempDrawer/>\r\n                                </Grid>\r\n                                {titlePart}\r\n                                <Grid item>\r\n                                    <Link onClick={threadListState.callUpdateThreadList} to='/'><img src={logo} style={{\r\n                                        maxWidth: '45px',\r\n                                        verticalAlign: 'middle'\r\n                                    }}\r\n                                                                                                     alt=\"logo\"/></Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    {createReplyBtn}\r\n                </div>\r\n                <CreateReplyBtnCompo/>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nButtonAppBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(ButtonAppBar));\r\n","import React, {Component} from 'react';\nimport {inject, observer} from 'mobx-react';\nimport {Redirect} from \"react-router-dom\";\n\nimport './App.css';\n\nimport GoogleOAuth from './Plugin/GoogleOAuth';\nimport forumAjaxAdapter from './Adapters/ForumAjaxAdapter';\n\n@inject('googleOAuthState')\nclass App extends Component {\n\n    state = {\n        isRedirectRegistration: false\n    };\n\n    componentWillMount() {\n        const googleOAuthState = this.props.googleOAuthState;\n        GoogleOAuth.init((isPass) => {\n            if (isPass) {\n                googleOAuthState.onLoginSuccess();\n                GoogleOAuth.userPrepare().then((isRegistered) => {\n                    // console.log(isRegistered);\n                    // console.log(GoogleOAuth.isRegistered());\n                    // console.log(GoogleOAuth.getUserInfo());\n\n                    // googleOAuthState.isRegistered = isRegistered;\n                    // googleOAuthState.setUserInfo(GoogleOAuth.getUserInfo());\n                    // this.setState({isRedirectRegistration: !isRegistered});\n\n                    if(isRegistered) {\n                        // googleOAuthState.isRegistered = isRegistered;\n                        // googleOAuthState.setUserInfo(GoogleOAuth.getUserInfo());\n                        // this.setState({isRedirectRegistration: !isRegistered});\n                        forumAjaxAdapter.getUserInfo(GoogleOAuth.getUserInfo().userAddr)\n                            .then(() => {\n                                googleOAuthState.isRegistered = isRegistered;\n                                googleOAuthState.setUserInfo(GoogleOAuth.getUserInfo());\n                                this.setState({isRedirectRegistration: !isRegistered});\n                            })\n                            .catch((e) => {\n                                if (e.response.data.error.message === 'Tx not found') {\n                                    googleOAuthState.isRegistered = false;\n                                    this.setState({isRedirectRegistration: true});\n                                }\n                            });\n                    }else {\n                        googleOAuthState.isRegistered = isRegistered;\n                        this.setState({isRedirectRegistration: !isRegistered});\n                    }\n\n                });\n            } else {\n                googleOAuthState.onLoggedOut();\n            }\n        });\n    }\n\n    render() {\n        const {classes} = this.props;\n        if (this.state.isRedirectRegistration) {\n            return <Redirect to=\"/registration\"/>;\n        }\n        return '';\n    }\n}\n\nexport default App;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter, Link, Redirect} from \"react-router-dom\";\r\nimport classNames from 'classnames';\r\nimport {inject, observer} from 'mobx-react';\r\nimport moment from 'moment';\r\nimport {Skeleton} from 'antd';\r\n\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport {AutoSizer, Column, SortDirection, Table} from 'react-virtualized';\r\n\r\nimport forumAjaxAdapter from '../Adapters/ForumAjaxAdapter';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    table: {\r\n        fontFamily: theme.typography.fontFamily,\r\n    },\r\n    flexContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        boxSizing: 'border-box',\r\n    },\r\n    tableRow: {\r\n        cursor: 'pointer',\r\n    },\r\n    tableRowHover: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.grey[200],\r\n        },\r\n    },\r\n    tableCell: {\r\n        flex: 1,\r\n    },\r\n    noClick: {\r\n        cursor: 'initial',\r\n    }\r\n});\r\n\r\nclass MuiVirtualizedTable extends React.PureComponent {\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    getRowClassName = ({index}) => {\r\n        const {classes, rowClassName, onRowClick} = this.props;\r\n\r\n        return classNames(classes.tableRow, classes.flexContainer, rowClassName, {\r\n            [classes.tableRowHover]: index !== -1 && onRowClick != null,\r\n        });\r\n    };\r\n\r\n    cellRenderer = ({cellData, columnIndex = null}) => {\r\n        const {columns, classes, rowHeight, onRowClick} = this.props;\r\n        const dataOrSkeleton = this.props.loadSuccess ? cellData : (\r\n            <Skeleton active title={{width: '100%'}} paragraph={{rows: 0, marginTop: 0}}/>);\r\n        return (\r\n            <TableCell\r\n                component=\"div\"\r\n                className={classNames(classes.tableCell, classes.flexContainer, {\r\n                    [classes.noClick]: onRowClick == null,\r\n                })}\r\n                variant=\"body\"\r\n                style={{height: rowHeight}}\r\n                align={(columnIndex != null && columns[columnIndex].numeric) || false ? 'right' : 'left'}\r\n            >\r\n                {/*{cellData}*/}\r\n                {/*<Skeleton active title={{width: '100%'}} paragraph={{rows: 0, marginTop: 0}}/>*/}\r\n                {dataOrSkeleton}\r\n            </TableCell>\r\n        );\r\n    };\r\n\r\n    headerRenderer = ({label, columnIndex, dataKey, sortBy, sortDirection}) => {\r\n        const {headerHeight, columns, classes, sort} = this.props;\r\n        const direction = {\r\n            [SortDirection.ASC]: 'asc',\r\n            [SortDirection.DESC]: 'desc',\r\n        };\r\n\r\n        const inner =\r\n            !columns[columnIndex].disableSort && sort != null ? (\r\n                <TableSortLabel active={dataKey === sortBy} direction={direction[sortDirection]}>\r\n                    {label}\r\n                </TableSortLabel>\r\n            ) : (\r\n                label\r\n            );\r\n\r\n        return (\r\n            <TableCell\r\n                component=\"div\"\r\n                className={classNames(classes.tableCell, classes.flexContainer, classes.noClick)}\r\n                variant=\"head\"\r\n                style={{height: headerHeight}}\r\n                align={columns[columnIndex].numeric || false ? 'right' : 'left'}\r\n            >\r\n                {inner}\r\n            </TableCell>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const {classes, columns, ...tableProps} = this.props;\r\n        return (\r\n            <AutoSizer>\r\n                {({height, width}) => (\r\n                    <Table\r\n                        className={classes.table}\r\n                        height={height}\r\n                        width={width}\r\n                        {...tableProps}\r\n                        rowClassName={this.getRowClassName}\r\n                    >\r\n\r\n\r\n                        {columns.map(({cellContentRenderer = null, className, dataKey, ...other}, index) => {\r\n                            let renderer;\r\n                            if (cellContentRenderer != null) {\r\n                                renderer = cellRendererProps =>\r\n                                    this.cellRenderer({\r\n                                        cellData: cellContentRenderer(cellRendererProps),\r\n                                        columnIndex: index,\r\n                                    });\r\n                            } else {\r\n                                renderer = this.cellRenderer;\r\n                            }\r\n\r\n                            return (\r\n                                <Column\r\n                                    key={dataKey}\r\n                                    headerRenderer={headerProps =>\r\n                                        this.headerRenderer({\r\n                                            ...headerProps,\r\n                                            columnIndex: index,\r\n                                        })\r\n                                    }\r\n                                    className={classNames(classes.flexContainer, className)}\r\n                                    cellRenderer={renderer}\r\n                                    dataKey={dataKey}\r\n                                    {...other}\r\n                                />\r\n                            );\r\n                        })}\r\n\r\n                    </Table>\r\n                )}\r\n            </AutoSizer>\r\n        );\r\n    }\r\n}\r\n\r\nMuiVirtualizedTable.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    columns: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            cellContentRenderer: PropTypes.func,\r\n            dataKey: PropTypes.string.isRequired,\r\n            width: PropTypes.number.isRequired,\r\n        }),\r\n    ).isRequired,\r\n    headerHeight: PropTypes.number,\r\n    onRowClick: PropTypes.func,\r\n    rowClassName: PropTypes.string,\r\n    rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\r\n    sort: PropTypes.func,\r\n};\r\n\r\nMuiVirtualizedTable.defaultProps = {\r\n    headerHeight: 56,\r\n    rowHeight: 56,\r\n};\r\n\r\nconst WrappedVirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\r\n\r\n@inject('navState', 'threadListState')\r\nclass ReactVirtualizedTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        props.threadListState.bindUpdateThreadListFunc(this.updateThreadList);\r\n    }\r\n\r\n    state = {\r\n        loadSuccess: false,\r\n        rows: Array(10).fill('')\r\n    };\r\n\r\n    updateThreadList = () => {\r\n        const {createReplyBtnState} = this.props.navState;\r\n        if (createReplyBtnState === 'add') {\r\n            this.setState({loadSuccess: false, rows: Array(10).fill('')});\r\n            const timeout = new Promise(resolve => setTimeout(resolve, 200));\r\n            Promise.all([timeout, forumAjaxAdapter.getRecentThreads()]).then((res) => {\r\n                res[1].map((val) => {\r\n                    val.requestTime = moment(parseInt(val.requestTime)).calendar();\r\n                    return val;\r\n                });\r\n                this.setState({loadSuccess: true, rows: res[1]});\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillMount() {\r\n        const navState = this.props.navState;\r\n        navState.setIndexTitleMode(true);\r\n        navState.updateNavTitle('Threads');\r\n        navState.setCreateBtnState();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateThreadList();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const navState = this.props.navState;\r\n        navState.updateNavTitle();\r\n        navState.clearCreateReplyBtnState();\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.rows;\r\n        return (\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n                <Paper elevation={24} square style={{height: 'calc(100vh - 64px)', width: '85%'}}>\r\n                    {/*<Skeleton active title={true} paragraph={{ rows: 0 }}/>*/}\r\n                    <WrappedVirtualizedTable\r\n                        loadSuccess={this.state.loadSuccess}\r\n                        rowCount={rows.length}\r\n                        rowGetter={({index}) => rows[index]}\r\n                        onRowClick={event => this.props.history.push(`/thread/${event.rowData.threadAddr}`)}\r\n                        columns={[\r\n                            {\r\n                                // maxWidth:'100%',\r\n                                width: 0,\r\n                                flexGrow: 1.0,\r\n                                label: 'Title',\r\n                                dataKey: 'threadTitle',\r\n                            },\r\n                            {\r\n                                width: 100,\r\n                                label: 'Vote',\r\n                                dataKey: 'totalVote',\r\n                                numeric: true,\r\n                            },\r\n                            {\r\n                                width: 100,\r\n                                label: 'Replies',\r\n                                dataKey: 'totalReplies',\r\n                                numeric: true,\r\n                            },\r\n                            {\r\n                                width: 120,\r\n                                label: 'Author',\r\n                                dataKey: 'authorName',\r\n                            },\r\n                            {\r\n                                width: 150,\r\n                                label: 'Time',\r\n                                dataKey: 'requestTime',\r\n                            },\r\n                        ]}\r\n                    />\r\n                </Paper>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ReactVirtualizedTable);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {inject, observer} from 'mobx-react';\r\n\r\n\r\nimport {Button, withStyles} from \"@material-ui/core\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst styles = theme => ({\r\n    close: {\r\n        padding: theme.spacing.unit / 2,\r\n    },\r\n    snackbar: {\r\n        top: theme.spacing.unit\r\n    }\r\n});\r\n\r\n\r\n@inject('navState', 'notificationSnackState')\r\n@observer\r\nclass NotificationSnack extends React.Component {\r\n\r\n    render() {\r\n        const {classes, navState, notificationSnackState} = this.props;\r\n\r\n        return (\r\n            <Snackbar\r\n                autoHideDuration={5000}\r\n                className={classes.snackbar}\r\n                anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                open={notificationSnackState.open}\r\n                onClose={notificationSnackState.handleClose}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={notificationSnackState.message}\r\n                action={[\r\n                    <Button key=\"gotit\" color=\"secondary\" size=\"small\" onClick={notificationSnackState.handleClose}>\r\n                        Got It!\r\n                    </Button>,\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={classes.close}\r\n                        onClick={notificationSnackState.handleClose}\r\n                    >\r\n                        <CloseIcon/>\r\n                    </IconButton>,\r\n                ]}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(NotificationSnack);","import React, {Component, Fragment} from 'react';\r\nimport {inject, observer} from 'mobx-react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {Link, Redirect, withRouter} from 'react-router-dom';\r\n\r\nimport {Button, withStyles} from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        padding: theme.spacing.unit * 3,\r\n        marginTop: theme.spacing.unit * 2,\r\n        width: '55%'\r\n    }\r\n});\r\n\r\nclass About extends Component {\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n                <Paper className={classes.paper} square elevation={0}>\r\n                    <Typography variant=\"h4\" component=\"h4\" align=\"center\">\r\n                        About\r\n                    </Typography>\r\n                    <Divider/>\r\n                    <Typography paragraph component=\"p\"/>\r\n                    <Typography paragraph component=\"p\"/>\r\n                </Paper>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(About);","import React, {Component, Fragment} from 'react';\r\n\r\nimport {withStyles} from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        padding: theme.spacing.unit * 3,\r\n        marginTop: theme.spacing.unit * 2,\r\n        width: '80%'\r\n    }\r\n});\r\n\r\nclass Terms extends Component {\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n                <Paper className={classes.paper} square elevation={0}>\r\n                    <Typography variant=\"h4\" component=\"h4\" align=\"center\">\r\n                        Terms of Service and Disclaimer\r\n                    </Typography>\r\n                    <Divider/>\r\n                    <Typography paragraph component=\"p\"/>\r\n                    <Typography paragraph component=\"p\"/>\r\n\r\n                    <ol style={{fontWeight: 'bold'}}>\r\n                        <li>\r\n                            <Typography paragraph component=\"p\">\r\n                                <strong>Acceptance of Terms</strong>\r\n                            </Typography>\r\n                            <Typography paragraph component=\"p\">\r\n                                Welcome to the forum <a href=\"http://fyp.nathanlam11.tk\">fyp.nathanlam11.tk</a>. It is\r\n                                also under the domain name <strong>nathanlam11.tk</strong> by Nathan Lam.\r\n                                This forum is a part of university final year project created by Nathan Lam\r\n                                which provides the service only for academic and evaluation purpose.\r\n                                The following are the terms and conditions for the use of this Forum.\r\n                            </Typography>\r\n                        </li>\r\n                        <li>\r\n                            <Typography paragraph component=\"p\">\r\n                                <strong>Description of use and service</strong>\r\n                            </Typography>\r\n                            <Typography paragraph component=\"p\">\r\n                                This forum is providing user with discussion through the Internet.\r\n                                You understand and agree that the service is only for academic and evaluation purpose.\r\n                                You also understand and agree that the service is provided to you on an \"as is\"\r\n                                basis. <a href=\"http://fyp.nathanlam11.tk\">fyp.nathanlam11.tk</a> disclaims\r\n                                any liability as a result of any data deletion,\r\n                                interruption or any failures or personalized settings. <a\r\n                                href=\"http://fyp.nathanlam11.tk\">fyp.nathanlam11.tk</a> reserves\r\n                                the right to without giving any prior notice to you deactivate any or all of the service\r\n                                (including user account, discussion threads and reply posts etc.)\r\n                                to maintain forum working normally that <a\r\n                                href=\"http://fyp.nathanlam11.tk\">fyp.nathanlam11.tk</a> thinks appropriate.\r\n                            </Typography>\r\n                        </li>\r\n                        <li>\r\n                            <Typography paragraph component=\"p\">\r\n                                <strong>Registration obligation of user</strong>\r\n                            </Typography>\r\n                            <Typography paragraph component=\"p\">\r\n                                In order to take part in the discussion on the forum, you agree to authorize your\r\n                                Google account and allow <a href=\"http://fyp.nathanlam11.tk\">fyp.nathanlam11.tk</a> to\r\n                                access your\r\n                                Google drive <strong>only for storing your registration information</strong> through\r\n                                Google OAuth and Google APIs. <a\r\n                                href=\"http://fyp.nathanlam11.tk\">fyp.nathanlam11.tk</a> disclaims\r\n                                any liability as a result of <strong>loss</strong> or leak your registration information\r\n                                because of improper user's operation or Google's policy.\r\n                            </Typography>\r\n                        </li>\r\n                        <li>\r\n                            <Typography paragraph component=\"p\">\r\n                                <strong>User behavior</strong>\r\n                            </Typography>\r\n                            <Typography paragraph component=\"p\">\r\n                                You understand and confirm that the third party content providers may be solely\r\n                                responsible for their\r\n                                information data, video, music, sound, graphics, photographs, text, news or other\r\n                                contents are posted publicly or\r\n                                transmitted privately and <a\r\n                                href=\"http://fyp.nathanlam11.tk\">fyp.nathanlam11.tk</a> takes no responsibility for\r\n                                those contents.\r\n                                You agree and undertake not to use the service for any of illegal, damaging, threatening\r\n                                and abusing\r\n                                privacy infringing, obscene, immoral, discriminating, indecent.\r\n                                <a href=\"http://fyp.nathanlam11.tk\">fyp.nathanlam11.tk</a> reserves the right to\r\n                                deactivate the user who are violate terms of use.\r\n                            </Typography>\r\n                        </li>\r\n                    </ol>\r\n                </Paper>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Terms);","import React, {Component, Fragment} from 'react';\r\nimport {inject, observer} from 'mobx-react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {Link, Redirect, withRouter} from 'react-router-dom';\r\n\r\nimport {Button, Card, withStyles} from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport FacetIcon from '@material-ui/icons/Face';\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n\r\nimport moment from \"moment\";\r\nimport crypto from \"crypto\";\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        padding: theme.spacing.unit * 5,\r\n        marginTop: theme.spacing.unit * 2,\r\n        width: '55%'\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        maxWidth: '97%'\r\n    }\r\n});\r\n\r\n\r\n@inject('googleOAuthState')\r\n@observer\r\nclass Profile extends Component {\r\n    state = {\r\n        name: 'Cat in the Hat',\r\n        age: '',\r\n        multiline: 'Controlled',\r\n        currency: 'EUR',\r\n    };\r\n\r\n    handleChange = (name) => () => {\r\n    };\r\n\r\n\r\n    render() {\r\n        const {classes, googleOAuthState} = this.props;\r\n        if (!googleOAuthState.isRegistered) {\r\n            return <Redirect to=\"/\"/>;\r\n        }\r\n        const createDay = googleOAuthState.userInfo.createTime ? moment(parseInt(googleOAuthState.userInfo.createTime)).format(\"Do MMM YYYY\") : '';\r\n        const userId = googleOAuthState.userInfo.publicKeyBuff ? crypto.createHash('sha256').update(googleOAuthState.userInfo.publicKeyBuff).digest('hex') : '';\r\n        return (\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n                <Card className={classes.paper} square elevation={16}>\r\n                    <Typography variant=\"h6\" component=\"h6\" align=\"center\">\r\n                        <FacetIcon style={{verticalAlign: 'sub'}}/> Profile\r\n                    </Typography>\r\n                    <Divider/>\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatar aria-label=\"Recipe\">\r\n                                <PersonIcon/>\r\n                            </Avatar>\r\n                        }\r\n                        title={googleOAuthState.userInfo.username}\r\n                        subheader={'Registered on: ' + createDay}\r\n                    />\r\n                    <CardContent>\r\n                        <TextField\r\n                            label=\"User Address\"\r\n                            className={classes.textField}\r\n                            value={googleOAuthState.userInfo.userAddr}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                            disabled\r\n                        />\r\n                        <TextField\r\n                            label=\"User ID\"\r\n                            className={classes.textField}\r\n                            value={userId}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                            disabled\r\n                        />\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Profile);","import * as serviceWorker from './serviceWorker';\nimport React, {Fragment} from 'react';\nimport {Router, Route, Switch, Link} from 'react-router-dom'\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'mobx-react';\nimport {createBrowserHistory} from 'history'\nimport \"antd/dist/antd.css\";\n\nimport NavState from './Stores/NavState';\nimport GoogleOAuthState from './Stores/GoogleOAuthState';\nimport CreateReplyActionState from './Stores/CreateReplyActionState';\nimport ThreadListState from './Stores/ThreadListState';\nimport ThreadBodyState from './Stores/ThreadBodyState';\nimport NotificationSnackState from './Stores/NotificationSnackState';\n\n\nimport './index.css';\nimport Nav from './Layout/Nav';\nimport App from './App';\nimport ThreadList from './Contents/ThreadList';\nimport ThreadBody from './Contents/ThreadBody';\nimport Registration from './Contents/Registration';\nimport CreateReplyBtnCompo from './Components/CreateReplyBtnCompo';\nimport NotificationSnack from './Components/NotificationSnack';\nimport About from './Contents/About';\nimport Terms from './Contents/Terms';\nimport Profile from './Contents/Profile';\n\nconst stores = {\n    navState: new NavState(),\n    googleOAuthState: new GoogleOAuthState(),\n    createReplyActionState: new CreateReplyActionState(),\n    threadListState: new ThreadListState(),\n    threadBodyState: new ThreadBodyState(),\n    notificationSnackState: new NotificationSnackState()\n};\nconst history = createBrowserHistory({});\n\n\nclass SS extends React.Component {\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <div>\n                <CreateReplyBtnCompo/>\n            </div>\n        );\n    }\n}\n\n\nReactDOM.render((\n    <Provider {...stores}>\n        <Router basename={process.env.PUBLIC_URL} history={history}>\n            <Fragment>\n                <App/>\n                <Nav/>\n                <NotificationSnack/>\n                <Switch>\n                    <Route path=\"/\" exact component={ThreadList}/>\n                    <Route path=\"/about\" component={About}/>\n                    <Route path=\"/profile\" component={Profile}/>\n                    <Route path=\"/terms\" component={Terms}/>\n                    <Route path=\"/registration\" component={Registration}/>\n                    <Route path=\"/thread/:threadAddr\" component={ThreadBody}/>\n                    <Route path=\"/SS\" component={SS}/>\n                </Switch>\n            </Fragment>\n        </Router>\n    </Provider>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}